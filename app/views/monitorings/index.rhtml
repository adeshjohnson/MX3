<h3><%= _('Monitoring_call_price_sum_over_past_period') %></h3>

<table width="100%" class="maintable heading-center" cellpadding="3">
  <tr>
    <th><%= _('Active') %></th>
    <th><%= _('Period') %></th>
    <th><%= _('Amount') %> (<%= Currency.get_default.name %>)</th>
    <th><%= _('Block_user') %></th>
    <th><%= _('Send_email_to_admin') %></th>
    <th><%= _('Users') %></th>
    <th><%= _('Log') %></th>
    <th><%= _('Edit') %></th>
    <th><%= _('Delete') %></th>
  </tr>
  <% for monitoring in @monitorings %>
    <tr id="monit-<%=monitoring.id%>" class="center">
      <td class="active">
        <%= link_to activity_indicator(monitoring.active), { :action => :update, :id => monitoring.id, :monitoring => { :active => !monitoring.active } } %>
      </td>
      <td class="period">
        <%= format_period(monitoring.period_in_past) %>
      </td>
      <td class="amount">
        <%= monitoring.amount %>
      </td>
      <td class="block">
        <%= block_user(monitoring) %>
      </td>
      <td class="email">
        <%= send_admin_email(monitoring) %>
      </td>
      <% if monitoring.users.any? %>
        <td class="user_type">
          <% for user in monitoring.users %>
            <%=link_nice_user(user) %>
          <% end %>
        </td>
      <% else %>
        <td class="user_type">
          <strong><%= _(monitoring.user_type) %></strong>
        </td>
      <% end %>
      <td class="log">
        <%= link_to b_user_log, {:controller => "stats", :action => "action_log", :target_type => "monitoring", :target_id => monitoring.id}, :id=>"log_link_#{monitoring.id.to_s}" %>
      </td>
      <td class="edit">
        <%= link_to b_edit, { :action => 'edit', :id => monitoring }, :id=>"edit_link_#{monitoring.id.to_s}" %>
      </td>
      <td class="destroy">
        <%= link_to b_delete, { :action => 'destroy', :id => monitoring }, :id=>"delete_link_#{monitoring.id.to_s}", :confirm => _('are_you_sure'), :method => "post" %>
      </td>
    </tr>
  <% end %>
</table>

<br />

<h3><%= _('New_monitoring') %></h3>
<% form_for :monitoring, @monitoring, :url => { :action => 'create' }, :builder => MonitoringFormBuilder do |f| %>
  <table width="100%" class="monitoring" cellspacing="0" cellpadding="0">
    <thead>
      <tr>
        <th <%= tooltip(_('Period'), _('Period_explanation'))%>><%= _('Period') %></th>
        <th <%= tooltip(_('Amount'), _('Amount_explanation'))%>><%= _('Amount') %> (<%= Currency.get_default.name %>)</th>
        <th <%= tooltip(_('Block_user'), _('Block_user_explanation'))%>><%= _('Block_user') %></th>
        <th <%= tooltip(_('Send_email_to_admin'), _('Send_email_explanation'))%>><%= _('Send_email_to_admin') %></th>
        <th <%= tooltip(_('User_type'), _('User_type_explanation'))%>><%= _('User_type') %></th>
        <th class="last"></th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <%= render :partial => "form", :locals => { :form => f }  %>
        <td>
          <%= f.radio_button 'user_type', 'all', :checked => true %> <%= _('All') %><br/>
          <%= f.radio_button 'user_type', 'postpaid' %> <%= _('Postpaid') %><br/>
          <%= f.radio_button 'user_type', 'prepaid' %> <%= _('Prepaid') %><br/>
          <%= f.radio_button 'user_type', 'single' %> <%= _('User') %>
          <%= select('user','id', @users.collect {|p| [ p.username, p.id ] }) %>
        </td>
        <td class="center">
          <%= submit_tag _('Create'), :disable_with=>_('Processing..') %>
        </td>
      </tr>
    </tbody>
  </table>


  <p id="explanation"></p>

<% end %>
<br />
<script type="text/javascript">
  var template = new Template("<%= _('Monitoring_template_extended') %>");
  var values = <%= monitoring_values(@monitoring) %>;
  var messages = <%= monitoring_messages %> ;
  var userss = <%= monitoring_messages_users %> ;

  Event.observe(window, 'load', function() {
    $("explanation").update(template.evaluate(values));

    new Form.Element.Observer('amount', 1.0,
    function(el, value) {
      values.amount = value + " " + $("default_currency").value;
      $("explanation").update(template.evaluate(values));
    }
  );

    ["will_be_blocked", "will_not_be_blocked", "will_be_sent", "will_not_be_sent"].each( function(ev) {
      Event.observe(ev, 'change', function() {
        values[ev.match(/[A-Za-z]+$/)[0]] = messages[ev];
        $("explanation").update(template.evaluate(values));
      });
    });

    Event.observe('monitoring_period_in_past_type_minutes', 'change', function() {
      values.period = messages['thirty_minutes'];
      $("explanation").update(template.evaluate(values));
    });

    Event.observe('monitoring_period_in_past_type_hours', 'change', function() {
      values.period = parseInt($$(".period_hours").first().value) / 60 + " " + messages['hours'];
      $("explanation").update(template.evaluate(values));
    });

    Event.observe($$(".period_hours").first(), 'change', function() {
      values.period = parseInt($$(".period_hours").first().value) / 60 + " " + messages['hours'];
      $("explanation").update(template.evaluate(values));
    });

    Event.observe('monitoring_period_in_past_type_days', 'change', function() {
      values.period = parseInt($$(".period_days").first().value) / 1440 + " " + messages['days'];
      $("explanation").update(template.evaluate(values));
    });

    Event.observe($$('.period_days').first(), 'change', function() {
      values.period = parseInt($$(".period_days").first().value) / 1440 + " " + messages['days'];
      $("explanation").update(template.evaluate(values));
    });


    ["monitoring_user_type_all", "monitoring_user_type_postpaid", "monitoring_user_type_prepaid"].each( function(ev) {
      Event.observe(ev, 'change', function() {
        values.users = messages[ev.match(/[A-Za-z]+$/)[0]];
        $("explanation").update(template.evaluate(values));
      });
    });

    ["user_id", "monitoring_user_type_single"].each( function(ev) {
      Event.observe(ev, 'change', function() {
        if($("monitoring_user_type_single").checked == true){
          values.users = userss[$("user_id").value];
          $("explanation").update(template.evaluate(values));
        };
      });
    });

  });
</script>
