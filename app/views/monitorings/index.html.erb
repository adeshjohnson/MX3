<h3><%= _('Monitoring_call_price_sum_over_past_period') %></h3>

<table width="100%" class="maintable heading-right" cellpadding="3">
  <tr>
    <th align="center"><%= _('Active') %></th>
    <th align="center"><%= _('Period') %></th>
    <th align="center"><%= _('Monitoring_type') %></th>
    <th align="center"><%= _('Amount') %> (<%= Currency.get_default.name %>)</th>
    <th align="center"><%= _('Block_user') %></th>
    <th align="center"><%= _('Send_email_to_admin') %></th>
    <th align="center"><%= _('Users') %></th>
    <% if !reseller? %>
        <th align="center"><%= _('Log') %></th>
    <% end %>
    <th align="center"><%= _('Edit') %></th>
    <th align="center"><%= _('Delete') %></th>
  </tr>
  <% for monitoring in @monitorings %>
      <tr id="monit-<%= monitoring.id %>" class="center">
        <td class="active">
          <%= link_to activity_indicator(monitoring.active), {:action => :update, :id => monitoring.id, :monitoring => {:active => !monitoring.active}} %>
        </td>
        <td class="period">
          <%= format_period(monitoring.period_in_past) %>
        </td>
        <td class="period">
          <%= format_monitoring_type(monitoring.monitoring_type) %>
        </td>
        <td class="amount">
          <%= monitoring.amount if ['above', 'bellow'].include? monitoring.monitoring_type %>
        </td>
        <td class="block">
          <%= block_user(monitoring) %>
        </td>
        <td class="email">
          <%= send_admin_email(monitoring) %>
        </td>
        <% if monitoring.users.any? %>
            <td class="user_type">
              <% for user in monitoring.users %>
                  <%= link_nice_user(user) %>
              <% end %>
            </td>
        <% else %>
            <td class="user_type">
              <strong><%= _(monitoring.user_type) %></strong>
            </td>
        <% end %>
        <% if !reseller? %>
            <td class="log">
              <%= link_to b_user_log, {:controller => "stats", :action => "action_log", :target_type => "monitoring", :target_id => monitoring.id}, :id => "log_link_#{monitoring.id.to_s}" %>
            </td>
        <% end %>
        <td class="edit">
          <%= link_to b_edit, {:action => 'edit', :id => monitoring}, :id => "edit_link_#{monitoring.id.to_s}" %>
        </td>
        <td class="destroy">
          <%= link_to b_delete, {:action => 'destroy', :id => monitoring}, :id => "delete_link_#{monitoring.id.to_s}", :confirm => _('are_you_sure'), :method => "post" %>
        </td>
      </tr>
  <% end %>
</table>

<br/>

<h3><%= _('New_monitoring') %></h3>
<%= form_for @monitoring, :url => {:action => 'create'}, :builder => MonitoringFormBuilder do |f| %>
    <table width="100%" class="monitoring" cellspacing="0" cellpadding="0">
      <thead>
      <tr>
        <th <%= tooltip(_('Period'), _('Period_explanation')) %>><%= _('Period') %></th>
        <th <%= tooltip(_('Condition'), _('Monitoring_condition_explanation'))%>><%= _('Condition') %> </th> 
 	<th <%= tooltip(_('Actions'), _('Monitoring_action_explanation'))%>><%= _('Actions') %></th> 
        <th <%= tooltip(_('User_type'), _('User_type_explanation')) %>><%= _('User_type') %></th>
        <th class="last"></th>
      </tr>
      </thead>
      <tbody>
      <tr>
        <%= render :partial => "form", :locals => {:form => f} %>
        <td>
          <%= f.radio_button 'user_type', 'all', :checked => true %> <%= _('All') %>
          <br/>
          <%= f.radio_button 'user_type', 'postpaid' %> <%= _('Postpaid') %>
          <br/>
          <%= f.radio_button 'user_type', 'prepaid' %> <%= _('Prepaid') %>
          <br/>
          <%= f.radio_button 'user_type', 'single' %> <%= _('User') %>
          <%= select('user', 'id', @users.collect { |p| [p.username, p.id] }) %>
        </td>
        <td class="center">
          <%= submit_tag _('Create'), :disable_with => _('Processing..') %>
        </td>
      </tr>
      </tbody>
    </table>


    <p id="explanation"></p>

<% end %>
<br/>
<script type="text/javascript">
    var template = new Template("<%= _('Monitoring_template_extended') %>");
    var template_amount = template 
    var template_simultaneous = new Template("<%= _('Monitoring_simultaneous_calls_template_extended')%>") 
    var values = <%= raw monitoring_values(@monitoring).html_safe %>;
    var messages = <%= raw monitoring_messages.html_safe %>;
    var userss = <%= raw  monitoring_messages_users.html_safe %>;

    Event.observe(window, 'load', function () {
        $("explanation").update(template.evaluate(values));

        new Form.Element.Observer('amount', 1.0,
                function (el, value) {
                    values.amount = value + " " + $("default_currency").value;
                    $("explanation").update(template.evaluate(values));
                }
        );

        ["will_be_blocked", "will_not_be_blocked", "will_be_sent", "will_not_be_sent", "bellow_monitoringamount", "above_monitoringamount"].each(function (ev) {
            Event.observe(ev, 'change', function () {
                values[ev.match(/[A-Za-z]+$/)[0]] = messages[ev];
                if(ev == "bellow_monitoringamount"){ 
 	          values.amount = $("amount_bellow").value + " " + $("default_currency").value;
 	        } 
                if(ev == "above_monitoringamount"){ 
 	          values.amount = $("amount_above").value + " " + $("default_currency").value;
 	        } 
 	        template = template_amount 
                $("explanation").update(template.evaluate(values));
            });
        });

        Event.observe("simultaneous_calls", 'change', function() { 
 	   values["calls"] = messages["simultaneous_calls"]; 
 	   template = template_simultaneous 
 	   $("explanation").update(template.evaluate(values)); 
 	});

        Event.observe('monitoring_period_in_past_type_minutes', 'change', function () {
            values.period = messages['thirty_minutes'];
            $("explanation").update(template.evaluate(values));
        });

        Event.observe('monitoring_period_in_past_type_hours', 'change', function () {
            values.period = parseInt($$(".period_hours").first().value) / 60 + " " + messages['hours'];
            $("explanation").update(template.evaluate(values));
        });

        Event.observe($$(".period_hours").first(), 'change', function () {
            values.period = parseInt($$(".period_hours").first().value) / 60 + " " + messages['hours'];
            $("explanation").update(template.evaluate(values));
        });

        Event.observe('monitoring_period_in_past_type_days', 'change', function () {
            values.period = parseInt($$(".period_days").first().value) / 1440 + " " + messages['days'];
            $("explanation").update(template.evaluate(values));
        });

        Event.observe($$('.period_days').first(), 'change', function () {
            values.period = parseInt($$(".period_days").first().value) / 1440 + " " + messages['days'];
            $("explanation").update(template.evaluate(values));
        });


        ["monitoring_user_type_all", "monitoring_user_type_postpaid", "monitoring_user_type_prepaid"].each(function (ev) {
            Event.observe(ev, 'change', function () {
                values.users = messages[ev.match(/[A-Za-z]+$/)[0]];
                $("explanation").update(template.evaluate(values));
            });
        });

        ["user_id", "monitoring_user_type_single"].each(function (ev) {
            Event.observe(ev, 'change', function () {
                if ($("monitoring_user_type_single").checked == true) {
                    values.users = userss[$("user_id").value];
                    $("explanation").update(template.evaluate(values));
                }
                ;
            });
        });

    });
</script>
